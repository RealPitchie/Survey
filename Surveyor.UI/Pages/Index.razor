@page "/"
@using Surveyor.Domain.Models
@using Surveyor.Persistence
@using WebComponents

@inject SurveyRepository Repo 
@inject NavigationManager _navManager

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <MudButton Style="margin: 15px" OnClick="() => AddSurvey()" Variant="Variant.Outlined" Color="Color.Default">
                Добавить опрос
            </MudButton>
        </div>
    </div>
    @if (_items.Count > 0)
    {
        <div class="row">
            @foreach (var survey in _items)
            {
                <div class="col-md-4" style="min-width: 200px; border: none">
                    <MudCard Elevation=2 Class="hoverable-card" Style="margin: 15px;border-radius: 10px;">
                        <MudCardHeader>
                            <CustomCardTitle Text="@survey.Name"/>
                        </MudCardHeader>
                        <MudDivider Light="true"/>
                        <MudCardContent Style="overflow: scroll">
                            <Author Text="@survey.Author"/>
                            <Description Text="@survey.Description"/>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary">Пройти опрос</MudButton>
                        </MudCardActions>
                    </MudCard>
                </div>


            }
        </div>
    }
</div>

@code{ 
    List<Survey> _items = new(); 
    protected override async Task OnInitializedAsync()
    {
        _items = await Repo.GetAllSurveysAsync();
    }
 

    void AddSurvey()
    {
        _navManager.NavigateTo("/AddSurvey");
    }
}